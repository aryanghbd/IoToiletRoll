{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year3/EmbeddedSys/EmbeddedSystems22/webapp/MERN-stack-login-authentication/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './Components/Home/Home';\nimport Login from './Components/Auth/Login';\nimport Household from './Components/Auth/Household';\nimport Register from './Components/Auth/Register';\nimport Navbar from './Components/Navbar/Navbar';\nimport NotFound from './Components/NotFound/NotFound';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './redux/actions/authActions';\nimport PrivateRoute from './Components/private-route/PrivateRoute';\nimport Dashboard from './Components/Dashboard/Dashboard';\n\nfunction App() {\n  // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token); // Decode token and get user info and exp\n\n    const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n    store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser()); // Redirect to login\n\n      window.location.href = './login';\n    }\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/household\",\n    component: Household,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"*\",\n    component: NotFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"*\",\n    component: NotFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year3/EmbeddedSys/EmbeddedSystems22/webapp/MERN-stack-login-authentication/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Home","Login","Household","Register","Navbar","NotFound","Provider","store","jwt_decode","setAuthToken","setCurrentUser","logoutUser","PrivateRoute","Dashboard","App","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './Components/Home/Home';\nimport Login from './Components/Auth/Login';\nimport Household from './Components/Auth/Household';\nimport Register from './Components/Auth/Register';\nimport Navbar from './Components/Navbar/Navbar';\nimport NotFound from './Components/NotFound/NotFound';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './redux/actions/authActions';\nimport PrivateRoute from './Components/private-route/PrivateRoute';\nimport Dashboard from './Components/Dashboard/Dashboard';\n\nfunction App() {\n  // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded)); // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser()); // Redirect to login\n      window.location.href = './login';\n    }\n  }\n  return (\n    <Provider store={store}>\n      <Router>\n      <Route path=\"/household\" component={Household} />\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n          \n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}