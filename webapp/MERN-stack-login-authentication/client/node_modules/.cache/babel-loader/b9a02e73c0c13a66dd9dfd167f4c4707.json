{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year3/EmbeddedSys/EmbeddedSystems22/webapp/MERN-stack-login-authentication/client/src/Components/Auth/Register.jsx\";\nimport React, { Component } from 'react';\nimport './Auth.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../redux/actions/authActions';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.onChangeRegister = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.registerSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history);\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors,\n      name,\n      password,\n      password2,\n      email\n    } = this.state;\n    return React.createElement(\"section\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signup-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-capitalize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"To Register With Our Application You should must Put Your Own mongoURI Id in the \", React.createElement(\"kbd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"config/default.json\")))), React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signup-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.registerSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Full Name\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-control\",\n      placeholder: \"Enter your name\",\n      id: \"name\",\n      value: name,\n      onChange: this.onChangeRegister,\n      error: errors.name,\n      className: classnames('', {\n        invalid: errors.name\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, errors.name))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Email\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"input-control\",\n      placeholder: \"Enter your email\",\n      id: \"email\",\n      value: email,\n      onChange: this.onChangeRegister,\n      error: errors.email,\n      className: classnames('', {\n        invalid: errors.email\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, errors.email))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Password\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"input-control\",\n      placeholder: \"Enter your password\",\n      id: \"password\",\n      value: password,\n      onChange: this.onChangeRegister,\n      error: errors.password,\n      className: classnames('', {\n        invalid: errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, errors.password))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Confirm Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"input-control\",\n      placeholder: \"Confirm your password\",\n      id: \"password2\",\n      value: password2,\n      onChange: this.onChangeRegister,\n      error: errors.password2,\n      className: classnames('', {\n        invalid: errors.password2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, errors.password2))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-md btn-register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Signup\"))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Already have an account ?\", React.createElement(Link, {\n      to: \"/login\",\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Login\"))))))))));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year3/EmbeddedSys/EmbeddedSystems22/webapp/MERN-stack-login-authentication/client/src/Components/Auth/Register.jsx"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","classnames","Register","constructor","onChangeRegister","e","setState","target","id","value","registerSubmit","preventDefault","newUser","name","state","email","password","password2","props","history","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","invalid","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Auth.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../redux/actions/authActions';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeRegister = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  registerSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors, name, password, password2, email } = this.state;\n    return (\n      <section className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"signup-left\">\n                <h4 className=\"text-capitalize\">\n                  To Register With Our Application You should must Put Your Own\n                  mongoURI Id in the <kbd>config/default.json</kbd>\n                </h4>\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"signup-right\">\n                <h1>Signup</h1>\n                <form noValidate onSubmit={this.registerSubmit}>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <label htmlFor=\"name\">Full Name</label> <br />\n                      <input\n                        type=\"text\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your name\"\n                        id=\"name\"\n                        value={name}\n                        onChange={this.onChangeRegister}\n                        error={errors.name}\n                        className={classnames('', {\n                          invalid: errors.name\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.name}</span>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <label htmlFor=\"Email\">Email</label> <br />\n                      <input\n                        type=\"email\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={this.onChangeRegister}\n                        error={errors.email}\n                        className={classnames('', {\n                          invalid: errors.email\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.email}</span>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <label htmlFor=\"Password\">Password</label> <br />\n                      <input\n                        type=\"password\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={this.onChangeRegister}\n                        error={errors.password}\n                        className={classnames('', {\n                          invalid: errors.password\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.password}</span>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <label htmlFor=\"Confirm Password\">Confirm Password</label>\n                      <br />\n                      <input\n                        type=\"password\"\n                        className=\"input-control\"\n                        placeholder=\"Confirm your password\"\n                        id=\"password2\"\n                        value={password2}\n                        onChange={this.onChangeRegister}\n                        error={errors.password2}\n                        className={classnames('', {\n                          invalid: errors.password2\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.password2}</span>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <button type=\"submit\" className=\"btn btn-md btn-register\">\n                        Signup\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <p>\n                        Already have an account ?\n                        <Link to=\"/login\" className=\"text-success\">\n                          Login\n                        </Link>\n                      </p>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}