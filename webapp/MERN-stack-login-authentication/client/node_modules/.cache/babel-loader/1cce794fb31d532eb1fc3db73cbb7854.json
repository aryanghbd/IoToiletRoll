{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year3/EmbeddedSys/EmbeddedSystems22/webapp/MERN-stack-login-authentication/client/src/Components/Auth/Login.jsx\";\nimport React, { Component } from 'react';\nimport './Auth.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/authActions';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeLogin = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.loginSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard'); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      errors\n    } = this.state;\n    return React.createElement(\"section\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-capitalize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login with your credentials to enjoy the Application services\"))), React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.loginSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Email\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"input-control\",\n      placeholder: \"Enter your email\",\n      id: \"email\",\n      value: email,\n      onChange: this.onChangeLogin,\n      error: errors.email,\n      className: classnames('', {\n        invalid: errors.email || errors.emailNotFound\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, errors.email, errors.emailNotFound))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Password\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"input-control\",\n      placeholder: \"Enter your password\",\n      id: \"password\",\n      value: password,\n      onChange: this.onChangeLogin,\n      error: errors.password,\n      className: classnames('', {\n        invalid: errors.password || errors.passwordIncorrect\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, errors.password, errors.passwordIncorrect))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-md btn-register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Don't have an account ?\", React.createElement(Link, {\n      to: \"/register\",\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Create one\"))))))))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year3/EmbeddedSys/EmbeddedSystems22/webapp/MERN-stack-login-authentication/client/src/Components/Auth/Login.jsx"],"names":["React","Component","Link","PropTypes","connect","loginUser","classnames","Login","constructor","props","onChangeLogin","e","setState","target","id","value","loginSubmit","preventDefault","userData","email","state","password","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","invalid","emailNotFound","passwordIncorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Auth.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/authActions';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard'); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeLogin = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  loginSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  render() {\n    const { email, password, errors } = this.state;\n    return (\n      <section className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"login-left\">\n                <h4 className=\"text-capitalize\">\n                  Login with your credentials to enjoy the Application services\n                </h4>\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"login-right\">\n                <h1>Login</h1>\n                <form noValidate onSubmit={this.loginSubmit}>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <label htmlFor=\"Email\">Email</label> <br />\n                      <input\n                        type=\"email\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={this.onChangeLogin}\n                        error={errors.email}\n                        className={classnames('', {\n                          invalid: errors.email || errors.emailNotFound\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">\n                        {errors.email}\n                        {errors.emailNotFound}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <label htmlFor=\"Password\">Password</label> <br />\n                      <input\n                        type=\"password\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={this.onChangeLogin}\n                        error={errors.password}\n                        className={classnames('', {\n                          invalid: errors.password || errors.passwordIncorrect\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">\n                        {errors.password}\n                        {errors.passwordIncorrect}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <button type=\"submit\" className=\"btn btn-md btn-register\">\n                        Login\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                      <p>\n                        Don't have an account ?\n                        <Link to=\"/register\" className=\"text-success\">\n                          Create one\n                        </Link>\n                      </p>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n"]},"metadata":{},"sourceType":"module"}